# 命名空间
---
apiVersion: v1
kind: Namespace
metadata:
  name: live2d-api
  labels:
    name: live2d-api

# nginx 配置信息
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: live2d-api
data:
  default.conf: |
    server {
        listen       80;
        listen  [::]:80;
        server_name  _;

        #access_log  /var/log/nginx/host.access.log  main;
        index index.php;
        root   /var/www/html;
        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            root   /var/www/html;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        location ~ /\.ht {
            deny  all;
        }
    }

#deplpyment php + nginx
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: live2d-api
  namespace: live2d-api
spec:
  replicas: 1
  selector:
    matchLabels:
      ## 这里填的值，需要和下面的 template.labels.app对应上
      app: live2d-api
  template:
    metadata:
      labels:
        ## 这里填写的值，需要和上面 以及 service服务里面的筛选器对应上
        app: live2d-api
    spec:
      volumes:
        - name: nginx-config
          configMap:
            name: config
            items:
              - key: default.conf
                path: default.conf
      containers:
        - name: php
          image: 'scjtqs/php:live2d_api-fpm'
          ports:
            - name: php-fpm
              containerPort: 9000
              protocol: TCP
          env:
            - name: TZ
              value: "Asia/Shanghai"
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
        - name: nginx
          image: scjtqs/nginx:live2d_api
          env:
            - name: TZ
              value: "Asia/Shanghai"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

# service 服务
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: live2d-api
  name: live2d-api
  namespace: live2d-api
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  # 这个类型 仅支持Ipv4方式
  ipFamilyPolicy: SingleStack
  # 这里targetPort也可以填6379，这里的redis是 deploment里面的 ports 里面定义的name，因此可以这样写
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  ## 这里填的值，需要和deploment服务的 template.labels.app对应上，否则网络不通
  selector:
    app: live2d-api
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 600
  type: ClusterIP

# ingress 配置
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns01  # 填你cert-manager 注册了的方式
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/cors-allow-headers: X-Forwarded-For
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/proxy-body-size: 10G
    nginx.ingress.kubernetes.io/server-snippet: |-
      server_tokens off;
      proxy_hide_header X-Powered-By;
      location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
      }
  labels:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: live2d-api
    app.kubernetes.io/name: live2d-api
  name: live2d-api
  namespace: live2d-api
  resourceVersion: '1118513'
spec:
  ingressClassName: nginx
  rules:
    - host: live2d-api.mobyds.com
      http:
        paths:
          - backend:
              service:
                name: live2d-api
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - live2d-api.mobyds.com
      secretName: live2d-api-tls